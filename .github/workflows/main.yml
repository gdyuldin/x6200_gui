name: Build image
on:
  workflow_dispatch:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*'           # Push events to every tag not containing /

jobs:
  build:
    runs-on: ubuntu-22.04
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        docker-images: true
        swap-storage: true
    - name: check free space
      run: |
        df -h
        pwd
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout GUI
      uses: actions/checkout@v4
      with:
        submodules: true
        path: x6200_gui

    - name: Checkout buildroot
      uses: actions/checkout@v4
      with:
        submodules: true
        repository: gdyuldin/AetherX6200Buildroot
        path: AetherX6200Buildroot

    - name: Patch GUI mk
      run: |
        sed -i "s,https://github.com/gdyuldin/x6200_gui,${GITHUB_WORKSPACE}/x6200_gui,g" AetherX6200Buildroot/br2_external/package/x6200-gui/x6200_gui.mk
        sed -i "s,^X6200_GUI_SITE_METHOD = git,X6200_GUI_SITE_METHOD = local,g" AetherX6200Buildroot/br2_external/package/x6200-gui/x6200_gui.mk
        sed -i "s,^X6200_GUI_GIT_SUBMODULES,# X6200_GUI_GIT_SUBMODULES,g" AetherX6200Buildroot/br2_external/package/x6200-gui/x6200_gui.mk

    # Ccache
    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        file(APPEND "$ENV{GITHUB_OUTPUT}" "timestamp=${current_date}")

    - name: Ccache cache files
      uses: actions/cache@v4
      with:
        path: ~/.buildroot-ccache
        key: ${{ runner.os }}-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    # Configure
    - name: Configure
      run: |
        cd AetherX6200Buildroot && bash ./br_config.sh

    # Build
    - name: Build
      run: |
        cd AetherX6200Buildroot/build
        make lame mpg123
        make libsndfile-dirclean
        make

    # Replace U-boot
    # - name: Replace u-boot
    #   run: |
    #     dd if=x6200_gui/u-boot/u-boot-sunxi-with-spl.bin of=AetherX6200Buildroot/build/images/sdcard.img seek=8K bs=1 conv=notrunc

    # Compress image
    - name: Compress image
      run: |
        cd AetherX6200Buildroot/build/images
        zip sdcard.img.zip sdcard.img

    # Upload image
    - name: 'Upload image'
      uses: actions/upload-artifact@v4
      with:
        name: sdcard.img
        path: AetherX6200Buildroot/build/images/sdcard.img

    # Create release
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: AetherX6200Buildroot/build/images/sdcard.img.zip
